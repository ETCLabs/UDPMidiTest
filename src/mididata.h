// Copyright (c) 2015 Electronic Theatre Controls, Inc., http://www.etcconnect.com
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

#ifndef MIDIDATA_H
#define MIDIDATA_H

#include <QByteArray>
#include <QStack>
#include <QUuid>
#include <QObject>

class MidiData
{
    Q_GADGET

public:

enum MidiCommands {
    MIDI_NOTE_OFF = 0x80,
    MIDI_NOTE_ON = 0x90,
    MIDI_KEY_PRESSURE = 0xA0,
    MIDI_CONTROL_CHANGE = 0xB0,
    MIDI_PROGRAM_CHANGE = 0xC0,
    MIDI_CHANNEL_PRESSURE = 0xD0,
    MIDI_PITCH_BEND = 0xE0,
};

Q_ENUM(MidiCommands);

// MSC
// The format of a Show Control message is as follows:
// F0 7F <device_ID> 02 <command_format> <command> <data> F7
#define MSC_HEADER 0xF07F

enum MidiCommandFormats {
    MSC_COMMAND_FORMAT_RESERVED_FOR_EXTENSIONS = 0x0,
    MSC_COMMAND_FORMAT_LIGHTING = 0x1,
    MSC_COMMAND_FORMAT_MOVING_LIGHTS = 0x2,
    MSC_COMMAND_FORMAT_COLOUR_CHANGERS = 0x3,
    MSC_COMMAND_FORMAT_STROBES = 0x4,
    MSC_COMMAND_FORMAT_LASERS = 0x5,
    MSC_COMMAND_FORMAT_CHASERS = 0x6,
    MSC_COMMAND_FORMAT_SOUND = 0x10,
    MSC_COMMAND_FORMAT_MUSIC = 0x11,
    MSC_COMMAND_FORMAT_CD_PLAYERS = 0x12,
    MSC_COMMAND_FORMAT_EPROM_PLAYBACK = 0x13,
    MSC_COMMAND_FORMAT_AUDIO_TAPE_MACHINES = 0x14,
    MSC_COMMAND_FORMAT_INTERCOMS = 0x15,
    MSC_COMMAND_FORMAT_AMPLIFIERS = 0x16,
    MSC_COMMAND_FORMAT_AUDIO_EFFECTS_DEVICES = 0x17,
    MSC_COMMAND_FORMAT_EQUALISERS = 0x18,
    MSC_COMMAND_FORMAT_MACHINERY = 0x20,
    MSC_COMMAND_FORMAT_RIGGING = 0x21,
    MSC_COMMAND_FORMAT_FLYS = 0x22,
    MSC_COMMAND_FORMAT_LIFTS = 0x23,
    MSC_COMMAND_FORMAT_TURNTABLES = 0x24,
    MSC_COMMAND_FORMAT_TRUSSES = 0x25,
    MSC_COMMAND_FORMAT_ROBOTS = 0x26,
    MSC_COMMAND_FORMAT_ANIMATION = 0x27,
    MSC_COMMAND_FORMAT_FLOATS = 0x28,
    MSC_COMMAND_FORMAT_BREAKAWAYS = 0x29,
    MSC_COMMAND_FORMAT_BARGES = 0x2A,
    MSC_COMMAND_FORMAT_VIDEO = 0x30,
    MSC_COMMAND_FORMAT_VIDEO_TAPE_MACHINES = 0x31,
    MSC_COMMAND_FORMAT_VIDEO_CASSETTE_MACHINES = 0x32,
    MSC_COMMAND_FORMAT_VIDEO_DISC_PLAYERS = 0x33,
    MSC_COMMAND_FORMAT_VIDEO_SWITCHERS = 0x34,
    MSC_COMMAND_FORMAT_VIDEO_EFFECTS = 0x35,
    MSC_COMMAND_FORMAT_VIDEO_CHARACTER_GENERATORS = 0x36,
    MSC_COMMAND_FORMAT_VIDEO_STILL_STORES = 0x37,
    MSC_COMMAND_FORMAT_VIDEO_MONITORS = 0x38,
    MSC_COMMAND_FORMAT_PROJECTION = 0x40,
    MSC_COMMAND_FORMAT_FILM_PROJECTORS = 0x41,
    MSC_COMMAND_FORMAT_SLIDE_PROJECTORS = 0x42,
    MSC_COMMAND_FORMAT_VIDEO_PROJECTORS = 0x43,
    MSC_COMMAND_FORMAT_DISSOLVERS = 0x44,
    MSC_COMMAND_FORMAT_SHUTTER_CONTROLS = 0x45,
    MSC_COMMAND_FORMAT_PROCESS_CONTROL = 0x50,
    MSC_COMMAND_FORMAT_HYDRAULIC_OIL = 0x51,
    MSC_COMMAND_FORMAT_H2O = 0x52,
    MSC_COMMAND_FORMAT_CO2 = 0x53,
    MSC_COMMAND_FORMAT_COMPRESSED_AIR = 0x54,
    MSC_COMMAND_FORMAT_NATURAL_GAS = 0x55,
    MSC_COMMAND_FORMAT_FOG = 0x56,
    MSC_COMMAND_FORMAT_SMOKE = 0x57,
    MSC_COMMAND_FORMAT_CRACKED_HAZE = 0x58,
    MSC_COMMAND_FORMAT_PYRO = 0x60,
    MSC_COMMAND_FORMAT_FIREWORKS = 0x61,
    MSC_COMMAND_FORMAT_EXPLOSIONS = 0x62,
    MSC_COMMAND_FORMAT_FLAME = 0x63,
    MSC_COMMAND_FORMAT_SMOKE_POTS = 0x64,
    MSC_COMMAND_FORMAT_ALL_TYPES = 0x7F
};
Q_ENUM(MidiCommandFormats);

constexpr static const unsigned char TIMECODE_START[] = {0xF0, 0x7F, 0x7F, 0x01, 0x01};

enum MidiMscCommands {
    MSC_COMMAND_RESERVED = 0x00,
    MSC_COMMAND_GO = 0x01,
    MSC_COMMAND_STOP = 0x02,
    MSC_COMMAND_RESUME = 0x03,
    MSC_COMMAND_TIMED_GO = 0x04,
    MSC_COMMAND_LOAD = 0x05,
    MSC_COMMAND_SET = 0x06,
    MSC_COMMAND_FIRE = 0x07,
    MSC_COMMAND_ALL_OFF = 0x08,
    MSC_COMMAND_RESTORE = 0x09,
    MSC_COMMAND_RESET = 0x0A,
    MSC_COMMAND_GO_OFF = 0x0B,
    MSC_COMMAND_GO_JAM_CLOCK = 0x10,
    MSC_COMMAND_STANDBY_PLUS = 0x11,
    MSC_COMMAND_STANDBY_MINUS = 0x12,
    MSC_COMMAND_SEQUENCE_PLUS = 0x13,
    MSC_COMMAND_SEQUENCE_MINUS = 0x14,
    MSC_COMMAND_START_CLOCK = 0x15,
    MSC_COMMAND_STOP_CLOCK = 0x16,
    MSC_COMMAND_ZERO_CLOCK = 0x17,
    MSC_COMMAND_SET_CLOCK = 0x18,
    MSC_COMMAND_MTC_CHASE_ON = 0x19,
    MSC_COMMAND_MTC_CHASE_OFF = 0x1A,
    MSC_COMMAND_OPEN_CUE_LIST = 0x1B,
    MSC_COMMAND_CLOSE_CUE_LIST = 0x1C,
    MSC_COMMAND_OPEN_CUE_PATH = 0x1D
};
Q_ENUM(MidiMscCommands);

};





#endif // MIDIDATA_H
